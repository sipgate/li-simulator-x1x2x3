services:
  network-element:
    image: wiremock/wiremock:3.8.0-alpine@sha256:816c48897435b2fbfccc094b72212bdd5e3c4dec8d1cd24f76f2aa7e2caf206b
    platform: linux/amd64
    environment:
      WIREMOCK_OPTIONS: |
        --https-port 443
        --verbose

        --keystore-type PKCS12
        --https-keystore /mutual-tls-stores/network-element-keystore.p12
        --keystore-password changeit
        --key-manager-password changeit

        --truststore-type JKS
        --https-truststore /mutual-tls-stores/network-element-truststore.jks
        --truststore-password changeit

        --https-require-client-cert
    ports:
      - "443:443"
      - "8082:8080"
    networks:
      - li-network
    volumes:
      - "./docker/network-element:/home/wiremock"
      - "mutual-tls-stores:/mutual-tls-stores"
    depends_on:
      init-wiremock-certs:
        condition: service_completed_successfully
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "echo -e 'GET /__admin/health HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' | nc localhost 8080 | grep 'HTTP/1.1 200 OK'",
        ]
      timeout: 1s
      start_period: 8s
      interval: 1s

  init-wiremock-certs:
    image: registry.sipgate.net/docker/sipgate/runtime/zre-21:debian-bookworm
    volumes:
      - "./docker/init-mutual-tls:/init-mtls"
      - "mutual-tls-stores:/mutual-tls-stores"
    command:
      - "/init-mtls/create-wiremock-stores.sh"
    depends_on:
      init-admf-x1-stores:
        condition: service_completed_successfully
      init-ne-x1-stores:
        condition: service_completed_successfully

  init-admf-x1-stores:
    image: registry.sipgate.net/docker/sipgate/runtime/zre-21:debian-bookworm
    volumes:
      - "./docker/init-mutual-tls:/init-mtls"
      - "mutual-tls-stores:/mutual-tls-stores"
    environment:
      ROLE: "simulator"
      COMMON_NAME: "simulator"
    command:
      - "/init-mtls/create-certificates.sh"

  init-ne-x1-stores:
    image: registry.sipgate.net/docker/sipgate/runtime/zre-21:debian-bookworm
    volumes:
      - "./docker/init-mutual-tls:/init-mtls"
      - "mutual-tls-stores:/mutual-tls-stores"
    environment:
      ROLE: "network-element"
      COMMON_NAME: "network-element"
    command:
      - "/init-mtls/create-certificates.sh"

volumes:
  mutual-tls-stores:

networks:
  li-network:
    name: li-network
